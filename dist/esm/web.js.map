{"version":3,"file":"web.js","sourceRoot":"","sources":["../../src/web.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAE,MAAM,iBAAiB,CAAC;AAG5C,MAAM,OAAO,QAAS,SAAQ,SAAS;IAErC,aAAa;IACX,KAAK,CAAC,cAAc,CAAC,OAmBtB;QAGG,MAAM,IAAI,CAAC,WAAW,CAAC,kGAAkG,CAAC,CAAC;IAC/H,CAAC;IAAA,CAAC;IACA,aAAa;IACf,KAAK,CAAC,eAAe,CAAC,OAAY;QAC9B,MAAM,IAAI,CAAC,WAAW,CAAC,kGAAkG,CAAC,CAAC;IAC/H,CAAC;IAAA,CAAC;CACH;AAED,MAAM,KAAK,GAAG,IAAI,QAAQ,EAAE,CAAC;AAE7B,OAAO,EAAE,KAAK,EAAE,CAAC","sourcesContent":["import { WebPlugin } from '@capacitor/core';\nimport { JitsiPlugin } from './definitions';\n\nexport class JitsiWeb extends WebPlugin implements JitsiPlugin {\n\n  // @ts-ignore\n    async joinConference(options: {\n        roomName: string;\n        url: string;\n        token?: string;\n        channelLastN?: string;\n        displayName?: string;\n        subject?: string;\n        email?: string;\n        avatarURL?: string;\n        startWithAudioMuted?: boolean;\n        startWithVideoMuted?: boolean;\n        chatEnabled?: boolean;\n        inviteEnabled?: boolean;\n        callIntegrationEnabled?: boolean;\n        recordingEnabled?: boolean;\n        liveStreamingEnabled?: boolean;\n        screenSharingEnabled?: boolean;\n        featureFlags?: any;\n        configOverrides?: any;\n  }): Promise<{\n        success?: boolean;\n  }> {\n      throw this.unavailable('the web implementation is not available. Please use Jitsi Meet API to implement Jitsi in web app');\n  };\n    // @ts-ignore\n  async leaveConference(options?: {}): Promise<{ success?: boolean; }> {\n      throw this.unavailable('the web implementation is not available. Please use Jitsi Meet API to implement Jitsi in web app');\n  };\n}\n\nconst Jitsi = new JitsiWeb();\n\nexport { Jitsi };\n\n"]}